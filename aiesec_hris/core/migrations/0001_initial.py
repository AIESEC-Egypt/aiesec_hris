# Generated by Django 2.0 on 2017-12-25 23:42

import core.utility.path_generation
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=225)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128)),
            ],
            options={
                'ordering': ['-title'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128)),
                ('notes', models.TextField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=128, null=True)),
                ('start_date', models.DateField()),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('end_date', models.DateField()),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('invitees', models.ManyToManyField(blank=True, related_name='events_invited', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events_created', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ExperiencePoints',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('introduction', models.BooleanField(default=False, help_text='Buidling: Get to know, Team Bonding         Induction to the function/area')),
                ('plan', models.BooleanField(default=False, help_text='Building: Co-creation of Team Purpose, Expectations,         Goals, Strategies, Budget, JD, Deadlines')),
                ('personal_goal_setting', models.BooleanField(default=False, help_text='Building: Set the Individual Goals an dAction Plan,         Make Personal Goals for Development')),
                ('regular_team_meeting', models.BooleanField(default=False, help_text='Performing: Regular Tracking of the Plan         and Team Performance, Team Review')),
                ('regular_one_to_ones', models.BooleanField(default=False, help_text='Performing: Tracking and Coaching of Individual         Performance and Personal Goals, Feedback')),
                ('team_day', models.BooleanField(default=False, help_text='Performing:         Team bonding, Team activities, Appreciations')),
                ('report', models.BooleanField(default=False, help_text='Closing:         Key Results Achieved/Not Achieved')),
                ('transition', models.BooleanField(default=False, help_text='Closing: Knowledge,         Skill, Attitude and Document Transfer')),
                ('debrief', models.BooleanField(default=False, help_text='Closing: Team Experience         Debrief, Key Learnings, Next Steps')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='experience_points', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Form',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=225)),
                ('external', models.BooleanField(default=False, help_text='Share this form with unregistered users (users who do not have accounts on this system, for example: a recruitment form)? ')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='form_owner', to=settings.AUTH_USER_MODEL)),
                ('share', models.ManyToManyField(blank=True, help_text='Share this with specific people? Leave empty to share with all members', related_name='form_share', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LC',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='Paragraph',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='')),
                ('youtube_url', models.URLField(blank=True, null=True)),
                ('document', models.FileField(blank=True, null=True, upload_to='post_documents/')),
                ('text', models.TextField(blank=True, null=True)),
                ('order', models.IntegerField(default=1)),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.IntegerField(choices=[(1, 'MC'), (2, 'LC')])),
                ('title', models.CharField(max_length=128)),
                ('lc', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='position', to='core.LC')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='core.Position')),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('category', models.ManyToManyField(to='core.Category')),
                ('editor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('manually_verified', models.BooleanField(default=False)),
                ('job_description', models.TextField()),
                ('address', models.TextField()),
                ('phone', models.CharField(max_length=20)),
                ('photo', models.ImageField(upload_to=core.utility.path_generation.profile_photo_path)),
                ('expa_id', models.TextField()),
                ('national_id_number', models.CharField(max_length=128)),
                ('national_id_picture', models.ImageField(upload_to=core.utility.path_generation.national_id_path)),
                ('verification_issue', models.IntegerField(choices=[(1, 'PENDING'), (2, 'NATIONAL ID MISMATCH'), (3, 'OTHER'), (4, 'NONE')], default=1)),
                ('verification_issue_extra', models.TextField(blank=True, null=True)),
                ('gender', models.IntegerField(choices=[(1, 'MALE'), (2, 'FEMALE')])),
                ('date_of_birth', models.DateField()),
                ('has_ixp', models.BooleanField(default=False)),
                ('lc', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='profile', to='core.LC')),
                ('position', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to='core.Position')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=225)),
                ('required', models.BooleanField(default=False, verbose_name='Required?')),
                ('multiple', models.BooleanField(default=False, help_text='Can the use select more than choice for the answer?', verbose_name='Multiple Answers?')),
                ('choices', models.TextField(blank=True, help_text='Choices, seprated by new lines', null=True)),
                ('type', models.IntegerField(choices=[(1, 'Multiple Choice'), (2, 'Text')], default=1)),
                ('order', models.IntegerField(default=1)),
                ('form', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='question_form', to='core.Form')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='ResetPasswordCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=32)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SubmitForm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visitor', models.BooleanField(default=False)),
                ('visitor_email', models.CharField(blank=True, max_length=225, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('answers', models.ManyToManyField(related_name='answers_submit', to='core.Answer')),
                ('form', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='core.Form')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='paragraph',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='paragraph', to='core.Post'),
        ),
        migrations.AddField(
            model_name='answer',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answer_question', to='core.Question'),
        ),
    ]
